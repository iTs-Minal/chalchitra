// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserMovieData {
  id        String      @id @default(cuid())
  userId    String
  tmdbId    Int
  status    MovieStatus
  rating    Float?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

enum MovieStatus {
  FAVORITE
  WATCHLIST
  WATCHED
}

model UserShowData {
  id        String     @id @default(cuid())
  userId    String
  tmdbId    Int
  status    ShowStatus
  rating    Float?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

enum ShowStatus {
  FAVORITE
  WATCHLIST
  WATCHED
}

model MovieReview {
  id        String   @id @default(cuid())
  userId    String
  tmdbId    Int
  rating    Float
  content   String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

   reactions MovieReviewReaction[]

  @@unique([userId, tmdbId])
}

model ShowReview {
  id        String   @id @default(cuid())
  userId    String
  tmdbId    Int
  rating    Float
  content   String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  reactions ShowReviewReaction[]

  @@unique([userId, tmdbId])
}

model MovieReviewReaction {
  id        String   @id @default(cuid())
  userId    String
  reviewId  String
  isLike    Boolean
  createdAt DateTime @default(now())


 
    review MovieReview   @relation(fields: [reviewId], references: [id])

  @@unique([userId, reviewId]) // only one reaction per user per review
}

model ShowReviewReaction {
  id        String   @id @default(cuid())
  userId    String
  reviewId  String
  isLike    Boolean
  createdAt DateTime @default(now())


  review ShowReview  @relation(fields: [reviewId], references: [id])

  @@unique([userId, reviewId])
}
